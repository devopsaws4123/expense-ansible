- name: configure backed server
  hosts: backend
  become: yes
  tasks:
  - name: diable current nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: installed

  - name: useradd
    ansible.builtin.user:
      name: expense

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download file
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip files
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: install npm dependencies
    community.general.npm:
      path: /app

  - name: copy backend service file
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: install mysql
    ansible.builtin.dnf:
      name: mysql
      state: installed
  
  - name: install pymysql and crypto
    ansible.buultin.pip:
      name: "{{ item }}"
      state: installed
    loop:
    - PyMySQL

  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: ExpenseApp@1
      login_host: mysql.daws82s.online
      target: /app/schema/backend.sql


  - name: deamon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
      state: restarted
      enabled: true
      name: backend